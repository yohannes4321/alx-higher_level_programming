This file tests the function add_integer for proper functionality.

# Import the add_integer function directly
>>> add_integer = __import__('0-add_integer').add_integer

# Check if the function adds two integers.
>>> add_integer(2, 3)
5
>>> add_integer(-2, 3)
1
>>> add_integer(2, -3)
-1
>>> add_integer(-2, -3)
-5

# Check if the function adds two float arguments as integers.
>>> add_integer(2.5, 5)
7
>>> add_integer(2, 5.5)
7
>>> add_integer(2.5, 5.5)
7

# Check if it raises TypeError for invalid input.
>>> add_integer('Car', 5.5)
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> add_integer(2, '98')
Traceback (most recent call last):
...
TypeError: b must be an integer

# Check for float overflow
>>> add_integer(float('inf'))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer
>>> add_integer(float('nan'))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer

# Check if the default argument works
>>> add_integer(2)
100

# Check the function with no arguments
>>> add_integer()
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'a'
